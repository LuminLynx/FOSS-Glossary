name: PR Glossary Validation

on:
  pull_request:
    paths:
      - 'terms.yaml'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate-and-score:
    name: Validate & score glossary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR merge commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci --include=dev --no-audit --no-fund

      - name: Prepare base glossary snapshot
        id: base
        run: |
          if git cat-file -e ${{ github.event.pull_request.base.sha }}:terms.yaml 2>/dev/null; then
            git show ${{ github.event.pull_request.base.sha }}:terms.yaml > terms.base.yaml
          else
            printf "terms: []\n" > terms.base.yaml
          fi

      - name: Validate terms.yaml
        id: validate
        continue-on-error: true
        run: |
          set -o pipefail
          node scripts/validateTerms.js --base terms.base.yaml | tee validation-output.txt
          EXIT=${PIPESTATUS[0]}
          echo "exit_code=$EXIT" >> "$GITHUB_OUTPUT"
          {
            echo 'output<<EOF'
            cat validation-output.txt
            echo EOF
          } >> "$GITHUB_OUTPUT"
          exit $EXIT

      - name: Dry-run exporter schema check
        if: steps.validate.outputs.exit_code == '0'
        run: node scripts/exportTerms.js --check

      - name: Check landing page sync (informational)
        if: steps.validate.outputs.exit_code == '0'
        continue-on-error: true
        run: |
          echo "Checking if landing page needs regeneration..."
          if ! node scripts/validateLandingPage.js; then
            echo "⚠️  Warning: Landing page may need regeneration after merge"
            echo "   This will be handled automatically by the update-landing-page workflow"
          fi

      - name: Score latest term
        id: score
        if: steps.validate.outputs.exit_code == '0'
        run: |
          set -o pipefail
          node scripts/quickScore.js > score-output.txt
          cat score-output.txt

          SCORE_LINE=$(grep -m1 '^SCORE:' score-output.txt || true)
          BADGES_LINE=$(grep -m1 '^BADGES:' score-output.txt || true)
          TERM_NAME_LINE=$(grep -m1 '^TERM_NAME:' score-output.txt || true)
          TERM_SLUG_LINE=$(grep -m1 '^TERM_SLUG:' score-output.txt || true)

          if [ -n "$SCORE_LINE" ]; then
            SCORE_VALUE=$(echo "$SCORE_LINE" | cut -d: -f2- | xargs)
            echo "score=$SCORE_VALUE" >> "$GITHUB_OUTPUT"
          else
            echo "score=" >> "$GITHUB_OUTPUT"
          fi

          if [ -n "$BADGES_LINE" ]; then
            BADGES_VALUE=$(echo "$BADGES_LINE" | cut -d: -f2- | sed 's/^ *//' | sed 's/ *$//')
            echo "badges=$BADGES_VALUE" >> "$GITHUB_OUTPUT"
          else
            echo "badges=" >> "$GITHUB_OUTPUT"
          fi

          if [ -n "$TERM_NAME_LINE" ]; then
            TERM_NAME_VALUE=$(echo "$TERM_NAME_LINE" | cut -d: -f2-)
            echo "term_name=${TERM_NAME_VALUE}" >> "$GITHUB_OUTPUT"
          else
            echo "term_name=" >> "$GITHUB_OUTPUT"
          fi

          if [ -n "$TERM_SLUG_LINE" ]; then
            TERM_SLUG_VALUE=$(echo "$TERM_SLUG_LINE" | cut -d: -f2- | xargs)
            echo "term_slug=$TERM_SLUG_VALUE" >> "$GITHUB_OUTPUT"
          else
            echo "term_slug=" >> "$GITHUB_OUTPUT"
          fi

      - name: Comment on PR
        if: always()
        env:
          VALIDATION_EXIT: ${{ steps.validate.outputs.exit_code }}
          VALIDATION_OUTPUT: ${{ steps.validate.outputs.output }}
          SCORE: ${{ steps.score.outputs.score }}
          BADGES: ${{ steps.score.outputs.badges }}
          TERM_NAME: ${{ steps.score.outputs.term_name }}
          TERM_SLUG: ${{ steps.score.outputs.term_slug }}
          GITHUB_TOKEN: ${{ github.token }}
          COMMENT_TOKEN: ${{ secrets.COMMENT_TOKEN }}
        run: node .github/scripts/postGlossaryComment.js

      - name: Fail if validation failed
        if: steps.validate.outputs.exit_code != '0'
        run: |
          echo "Lint or parse errors detected in terms.yaml."
          exit 1
