name: Validate & Score Terms

on:
  pull_request:
    paths:
      - 'terms.yaml'
  push:
    branches: [main]
    paths:
      - 'terms.yaml'

# Prevent multiple instances
concurrency:
  group: "validate-${{ github.ref }}"
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write  # ADD THIS LINE
  pages: write     # ADD THIS LINE TOO

jobs:
  validate-and-score:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate terms
        id: validate
        continue-on-error: true
        run: |
          node scripts/validateTerms.js 2>&1 | tee validation-output.txt
          echo "valid=$?" >> $GITHUB_OUTPUT
          {
            echo 'validation_output<<EOF'
            cat validation-output.txt
            echo EOF
          } >> $GITHUB_OUTPUT
      
      - name: Score term (only if valid)
        id: score
        if: steps.validate.outputs.valid == '0'
        run: |
          node scripts/quickScore.js > output.txt
          cat output.txt
          echo "score=$(grep 'SCORE:' output.txt | cut -d: -f2)" >> $GITHUB_OUTPUT
          echo "badge=$(grep 'BADGE:' output.txt | cut -d: -f2-)" >> $GITHUB_OUTPUT
      
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const isValid = '${{ steps.validate.outputs.valid }}' === '0';
            const validationOutput = `${{ steps.validate.outputs.validation_output }}`;
            const score = '${{ steps.score.outputs.score }}' || '0';
            const badge = '${{ steps.score.outputs.badge }}' || '';
            
            let body = '## üéÆ Term Review\n\n';
            
            if (!isValid) {
              body += '### ‚ùå Validation FAILED!\n\n';
              body += 'Your submission has errors that need to be fixed:\n\n';
              body += '```\n';
              body += validationOutput.replace(/‚úÖ.*\n/g, '').trim();
              body += '\n```\n\n';
            } else {
              body += '### ‚úÖ Validation Passed!\n\n';
              body += `### üìä Quality Score: ${score}/100\n\n`;
              
              if (score >= 90) {
                body += '# üèÜ LEGENDARY! \n';
              } else if (score >= 80) {
                body += '## üî• AMAZING! \n';
              } else if (score >= 60) {
                body += '### üëç Good work! \n';
              }
              
              if (badge) {
                body += `\n### üèÜ Achievements Unlocked!\n${badge}\n`;
              }
            }
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('üéÆ Term Review')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }

  update-stats:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node
        uses: actions/setup-node@v3
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate before updating
        run: |
          node scripts/validateTerms.js
          if [ $? -ne 0 ]; then
            echo "‚ùå Terms validation failed!"
            exit 1
          fi
      
      - name: Update README stats
        run: node scripts/updateReadmeStats.js
      
      # Add delay to prevent race condition
      - name: Wait before committing
        run: |
          echo "Waiting to avoid race condition..."
          sleep 10
      
      - name: Commit and push changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "üìä Update stats [skip ci]"
            git push
          fi