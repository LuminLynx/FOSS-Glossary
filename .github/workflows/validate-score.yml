name: Validate & Score Terms

on:
  pull_request:
    paths:
      - 'terms.yaml'
  push:
    branches: [main]
    paths:
      - 'terms.yaml'

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write
  pages: write

concurrency:
  group: "validate-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  validate-and-score:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate terms
        id: validate
        continue-on-error: true
        run: |
          node scripts/validateTerms.js 2>&1 | tee validation-output.txt
          echo "valid=$?" >> $GITHUB_OUTPUT
          {
            echo 'validation_output<<EOF'
            cat validation-output.txt
            echo EOF
          } >> $GITHUB_OUTPUT
      
      - name: Generate validation report
        run: |
          echo "# üéÆ FOSS Glossary Term Review" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.validate.outputs.valid }}" == "0" ]; then
            echo "## ‚úÖ Validation Passed!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Your term has been validated successfully." >> $GITHUB_STEP_SUMMARY
            
            # Try to score if quickScore.js exists
            if [ -f "scripts/quickScore.js" ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### üìä Quality Score" >> $GITHUB_STEP_SUMMARY
              node scripts/quickScore.js >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Scoring not available" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "## ‚ùå Validation Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please fix the following errors:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat validation-output.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### üìù Example of a valid term:" >> $GITHUB_STEP_SUMMARY
            echo '```yaml' >> $GITHUB_STEP_SUMMARY
            echo '- term: "Example"' >> $GITHUB_STEP_SUMMARY
            echo '  definition: "A sample to demonstrate format"' >> $GITHUB_STEP_SUMMARY
            echo '  explanation: "Optional detailed explanation"' >> $GITHUB_STEP_SUMMARY
            echo '  humor: "Optional funny take"' >> $GITHUB_STEP_SUMMARY
            echo '  tags: ["example", "demo"]' >> $GITHUB_STEP_SUMMARY
            echo '  see_also: ["Related Term"]' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
      
      # Fail the job if validation failed
      - name: Check validation result
        if: steps.validate.outputs.valid != '0'
        run: |
          echo "Validation failed. Please check the summary for details."
          exit 1

  update-stats:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node
        uses: actions/setup-node@v3
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate before updating
        run: |
          node scripts/validateTerms.js
          if [ $? -ne 0 ]; then
            echo "‚ùå Terms validation failed!"
            exit 1
          fi
      
      - name: Update README stats
        run: |
          if [ -f "scripts/updateReadmeStats.js" ]; then
            node scripts/updateReadmeStats.js
          else
            echo "Stats updater not found, skipping"
          fi
      
      - name: Wait before committing
        run: sleep 10
      
      - name: Commit and push changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "üìä Update stats [skip ci]"
            git push
          fi