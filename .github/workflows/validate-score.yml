name: Validate & Score Terms

on:
  pull_request:
    paths:
      - 'terms.yaml'
  push:
    branches: [main]
    paths:
      - 'terms.yaml'

# Add ALL permissions for PR commenting
permissions:
  actions: write
  contents: write
  pull-requests: write
  issues: write
  id-token: write
  pages: write
  statuses: write
  checks: write

concurrency:
  group: "validate-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  validate-and-score:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate terms
        id: validate
        continue-on-error: true
        run: |
          node scripts/validateTerms.js 2>&1 | tee validation-output.txt
          echo "valid=$?" >> $GITHUB_OUTPUT
          {
            echo 'validation_output<<EOF'
            cat validation-output.txt
            echo EOF
          } >> $GITHUB_OUTPUT
      
      - name: Score term (only if valid)
        id: score
        if: steps.validate.outputs.valid == '0'
        run: |
          node scripts/quickScore.js > output.txt
          cat output.txt
          echo "score=$(grep 'SCORE:' output.txt | cut -d: -f2)" >> $GITHUB_OUTPUT
          echo "badge=$(grep 'BADGE:' output.txt | cut -d: -f2-)" >> $GITHUB_OUTPUT
      
      # FIXED: Using peter-evans action for better PR comment handling
      - name: Comment PR Results
        if: github.event_name == 'pull_request'
        continue-on-error: true  # Don't fail workflow if commenting doesn't work
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## üéÆ Term Review
            
            ${{ steps.validate.outputs.valid == '0' && '### ‚úÖ Validation Passed!' || '### ‚ùå Validation Failed!' }}
            
            ${{ steps.score.outputs.score && format('**Score: {0}/100**', steps.score.outputs.score) || '' }}
            
            ${{ steps.score.outputs.badge || '' }}
            
            ---
            *Automated review by FOSS Glossary Bot*

  update-stats:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node
        uses: actions/setup-node@v3
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate before updating
        run: |
          node scripts/validateTerms.js
          if [ $? -ne 0 ]; then
            echo "‚ùå Terms validation failed!"
            exit 1
          fi
      
      - name: Update README stats
        run: node scripts/updateReadmeStats.js
      
      - name: Wait before committing
        run: sleep 10
      
      - name: Commit and push changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "üìä Update stats [skip ci]"
            git push
          fi