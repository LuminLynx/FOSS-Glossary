# .github/workflows/validate-score.yml
# Updated version that won't trigger unnecessary Pages rebuilds

name: Validate & Score Terms

on:
  pull_request:
    paths:
      - 'terms.yaml'
  push:
    branches: [main]
    paths:
      - 'terms.yaml'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  validate-and-score:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate terms
        id: validate
        continue-on-error: true
        run: |
          node scripts/validateTerms.js 2>&1 | tee validation-output.txt
          echo "valid=$?" >> $GITHUB_OUTPUT
          {
            echo 'validation_output<<EOF'
            cat validation-output.txt
            echo EOF
          } >> $GITHUB_OUTPUT
      
      - name: Score term (only if valid)
        id: score
        if: steps.validate.outputs.valid == '0'
        run: |
          node scripts/quickScore.js > output.txt
          cat output.txt
          echo "score=$(grep 'SCORE:' output.txt | cut -d: -f2)" >> $GITHUB_OUTPUT
          echo "badge=$(grep 'BADGE:' output.txt | cut -d: -f2-)" >> $GITHUB_OUTPUT
      
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const isValid = '${{ steps.validate.outputs.valid }}' === '0';
            const validationOutput = `${{ steps.validate.outputs.validation_output }}`;
            const score = '${{ steps.score.outputs.score }}' || '0';
            const badge = '${{ steps.score.outputs.badge }}' || '';
            
            let body = '## 🎮 Term Review\n\n';
            
            if (!isValid) {
              body += '### ❌ Validation FAILED!\n\n';
              body += 'Your submission has errors that need to be fixed:\n\n';
              body += '```\n';
              body += validationOutput.replace(/✅.*\n/g, '').trim();
              body += '\n```\n\n';
              body += '### 📝 How to Fix\n\n';
              body += '1. Check that your YAML syntax is correct\n';
              body += '2. Ensure each term has both `term` and `definition` fields\n';
              body += '3. Make sure text fields are strings\n';
              body += '4. Arrays should use proper YAML list syntax\n\n';
              body += '### ✨ Valid Term Example\n\n';
              body += '```yaml\n';
              body += '- term: "Example"\n';
              body += '  definition: "A sample to demonstrate correct format"\n';
              body += '  explanation: "Optional longer explanation"\n';
              body += '  humor: "Optional funny take"\n';
              body += '  tags: ["example", "demo"]\n';
              body += '```\n';
            } else {
              body += '### ✅ Validation Passed!\n\n';
              body += `### 📊 Quality Score: ${score}/100\n\n`;
              
              if (score >= 90) {
                body += '# 🏆 LEGENDARY! \n';
                body += 'This is absolutely perfect! You are a FOSS Glossary champion! 🎉\n';
              } else if (score >= 80) {
                body += '## 🔥 AMAZING! \n';
                body += 'This is top-tier content! Outstanding contribution! 🌟\n';
              } else if (score >= 70) {
                body += '### 💪 Great job! \n';
                body += 'This is a solid contribution! Well done! 👏\n';
              } else if (score >= 60) {
                body += '### 👍 Good work! \n';
                body += 'Nice contribution! Consider adding humor or references for bonus points! 📈\n';
              } else {
                body += '### 🌱 Thanks for contributing! \n';
                body += 'Every term helps! Here\'s how to score higher:\n';
                body += '- **Humor**: Add a funny take (up to 30 points)\n';
                body += '- **Explanation**: Add context (20 points)\n';
                body += '- **Cross-references**: Link related terms (20 points)\n';
              }
              
              if (badge) {
                body += `\n### 🏆 Achievements Unlocked!\n${badge}\n`;
              }
            }
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🎮 Term Review')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }

  update-stats:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # Add concurrency to prevent multiple stats updates at once
    concurrency:
      group: update-stats
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Don't trigger Pages rebuild for README updates
          persist-credentials: false
      
      - name: Setup Node
        uses: actions/setup-node@v3
      
      - name: Install dependencies
        run: npm install js-yaml
      
      - name: Validate before updating stats
        run: |
          node scripts/validateTerms.js
          if [ $? -ne 0 ]; then
            echo "❌ Terms validation failed on main branch!"
            exit 1
          fi
        
      - name: Update README
        run: node scripts/updateReadmeStats.js
      
      - name: Check if README changed
        id: check_changes
        run: |
          if git diff --quiet README.md; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          # Use [skip ci] to prevent triggering more workflows
          git commit -m "📊 Update stats [skip ci]"
          
          # Push using the GitHub token
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push